trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'Docker-Connexion'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: 
          $(tag)
          latest
          
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy to Production
  dependsOn: Build
  variables:
   acrsecret: K8sexampleacrauth
   acrdevurl: 'AzureDevopsProject.azurecr.io'

  jobs:
    - deployment: Deploy
      displayName: Deploy to kubernetes
      environment: 'k8sdev.default'
      pool:
        vmImage: ubuntu-latest
      strategy:
       runOnce:
         deploy:
           
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifests'
              targetPath: '$(Pipeline.Workspace)/manifests'
          - task: KubernetesManifest@1
            inputs:
              action: 'createSecret'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: '$(acrsecret)'
              dockerRegistryEndpoint: 'Docker-Connexion'
          - task: KubernetesManifest@1
            inputs:
              action: 'deploy'
              namespace: 'default'
              manifests:
               $(Pipeline.Workspace)/manifests/deployment.yaml 
               $(Pipeline.Workspace)/manifests/service.yaml'
              containers: '$(acrdevurl)/$(imageRepo): $(tag)'